Test cases for my_list module

Import the module:
    >>> MyList = __import__('1-my_list').MyList

Test already sorted list
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(4)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Test random order list:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Test descending order list:
    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> my_list.append(4)
    >>> my_list.append(3)
    >>> my_list.append(2)
    >>> my_list.append(1)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Test empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test undefined list:
    >>> empty_list.print_sorted()
    Traceback (most recent call last):
        ...
    NameError: name 'empty_list' is not defined

Test list with negative values:
    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> my_list.append(-5)
    >>> my_list.append(0)
    >>> my_list.append(2)
    >>> my_list.append(-8)
    >>> my_list.print_sorted()
    [-8, -5, 0, 2, 5]

Test with initialized list:
    >>> a = [1, 4, 6, 4, 8, 9]
    >>> my_list = MyList(a)
    >>> my_list.print_sorted()
    [1, 4, 4, 6, 8, 9]

Test repeated value:
    >>> a = [9, 9, 9, 9, 9, 9]
    >>> my_list = MyList(a)
    >>> my_list.print_sorted()
    [9, 9, 9, 9, 9, 9]

Test call parent object:
    >>> my_list = [-8, -5, 0, 2, 5]
    >>> my_list.print_sorted()
    Traceback (most recent call last):
        ...
    AttributeError: 'list' object has no attribute 'print_sorted'

Test single item list:
    >>> a = [9]
    >>> my_list = MyList(a)
    >>> my_list.print_sorted()
    [9]
